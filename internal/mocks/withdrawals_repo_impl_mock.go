// Code generated by MockGen. DO NOT EDIT.
// Source: internal/repository/withdrawal_repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	repository "github.com/gophermart/internal/repository"
)

// MockWithdrawalRepository is a mock of WithdrawalRepository interface.
type MockWithdrawalRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWithdrawalRepositoryMockRecorder
}

// MockWithdrawalRepositoryMockRecorder is the mock recorder for MockWithdrawalRepository.
type MockWithdrawalRepositoryMockRecorder struct {
	mock *MockWithdrawalRepository
}

// NewMockWithdrawalRepository creates a new mock instance.
func NewMockWithdrawalRepository(ctrl *gomock.Controller) *MockWithdrawalRepository {
	mock := &MockWithdrawalRepository{ctrl: ctrl}
	mock.recorder = &MockWithdrawalRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWithdrawalRepository) EXPECT() *MockWithdrawalRepositoryMockRecorder {
	return m.recorder
}

// CreateWithdrawal mocks base method.
func (m *MockWithdrawalRepository) CreateWithdrawal(ctx context.Context, withdrawal *repository.Withdrawal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateWithdrawal", ctx, withdrawal)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateWithdrawal indicates an expected call of CreateWithdrawal.
func (mr *MockWithdrawalRepositoryMockRecorder) CreateWithdrawal(ctx, withdrawal interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWithdrawal", reflect.TypeOf((*MockWithdrawalRepository)(nil).CreateWithdrawal), ctx, withdrawal)
}

// GetWithdrawalByUserID mocks base method.
func (m *MockWithdrawalRepository) GetWithdrawalByUserID(ctx context.Context, userID string) ([]*repository.Withdrawal, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdrawalByUserID", ctx, userID)
	ret0, _ := ret[0].([]*repository.Withdrawal)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdrawalByUserID indicates an expected call of GetWithdrawalByUserID.
func (mr *MockWithdrawalRepositoryMockRecorder) GetWithdrawalByUserID(ctx, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdrawalByUserID", reflect.TypeOf((*MockWithdrawalRepository)(nil).GetWithdrawalByUserID), ctx, userID)
}
